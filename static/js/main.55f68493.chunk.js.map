{"version":3,"sources":["components/Layout/Header/Header.js","components/Layout/Footer/Footer.js","components/StickerList/StickerListItem/StickerListItem.js","components/StickerList/StickerListAdd/StickerListAdd.js","components/StickerList/StickerList.js","App.js","services/db/index.js","index.js"],"names":["Header","className","Footer","StickerListItem","props","handleChange","e","target","setState","name","value","handleKeyDown","id","sticker","key","editSticker","state","title","handleColorChange","color","newColor","Object","values","hex","join","handleClick","showColorPicker","handleBlur","handleClose","text","this","removeSticker","style","backgroundColor","type","onChange","onKeyDown","onBlur","onClick","bind","Component","StickerListAdd","addSticker","newSticker","uuid","placeholder","StickerList","stickers","map","item","App","filter","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55f68493.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => (\r\n    <header>\r\n        <div className=\"wrapper header\">\r\n            <h2 className=\"header__logo\">StickIt</h2>\r\n        </div>\r\n    </header>\r\n);\r\n","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"wrapper\">Â© Serhii Tyshchenko, 2019</div>\r\n        </footer>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { GithubPicker } from 'react-color';\r\nexport class StickerListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.sticker.title || 'Untitled',\r\n            text: this.props.sticker.text || 'Start typing...',\r\n            color: this.props.sticker.color || '#fff',\r\n            showColorPicker: false\r\n        };\r\n    }\r\n    handleChange = e => {\r\n        const target = e.target;\r\n        this.setState({ [target.name]: target.value });\r\n    };\r\n\r\n    handleKeyDown = e => {\r\n        const id = this.props.sticker.id;\r\n        if (e.key === 'Enter') {\r\n            this.props.editSticker(id, 'title', this.state.title);\r\n        }\r\n    };\r\n    handleColorChange = color => {\r\n        const newColor = Object.values(color.hex).join('');\r\n        const id = this.props.sticker.id;\r\n        this.setState({ color: newColor });\r\n        this.props.editSticker(id, 'color', newColor);\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ showColorPicker: !this.state.showColorPicker });\r\n    };\r\n    handleBlur = e => {\r\n        const target = e.target;\r\n        const id = this.props.sticker.id;\r\n        this.props.editSticker(id, target.name, target.value);\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ showColorPicker: false });\r\n    };\r\n    render() {\r\n        const {\r\n            removeSticker,\r\n            sticker: { id }\r\n        } = this.props;\r\n        const { title, text, color, showColorPicker } = this.state;\r\n\r\n        return (\r\n            <li\r\n                className=\"stickers__item sticker\"\r\n                style={{ backgroundColor: color }}\r\n            >\r\n                <div className=\"sticker__header\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={title}\r\n                        name=\"title\"\r\n                        className=\"sticker__title\"\r\n                        onChange={this.handleChange}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onBlur={this.handleBlur}\r\n                    />\r\n                    <div className=\"sticker__controls\">\r\n                        <button\r\n                            className=\"sticker__btn icon-color-adjust\"\r\n                            onClick={this.handleClick}\r\n                            title=\"Change sticker color\"\r\n                        >\r\n                            {showColorPicker ? (\r\n                                <GithubPicker\r\n                                    color={color}\r\n                                    onChange={this.handleColorChange}\r\n                                />\r\n                            ) : null}\r\n                        </button>\r\n                        <button\r\n                            onClick={removeSticker.bind(this, id)}\r\n                            title=\"Remove sticker\"\r\n                            className=\"sticker__btn sticker__remove icon-trash-empty\"\r\n                        ></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sticker__details\">\r\n                    <textarea\r\n                        name=\"text\"\r\n                        onChange={this.handleChange}\r\n                        onBlur={this.handleBlur}\r\n                        className=\"sticker__text\"\r\n                        type=\"textarea\"\r\n                        value={text}\r\n                    />\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { GithubPicker } from 'react-color';\r\nimport uuid from 'uuid/v1';\r\nexport default class StickerListAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            text: '',\r\n            color: '#fff',\r\n            showColorPicker: false\r\n        };\r\n    }\r\n    addSticker = () => {\r\n        const id = uuid();\r\n        const newSticker = {\r\n            id: id,\r\n            title: this.state.title,\r\n            text: this.state.text,\r\n            color: this.state.color\r\n        };\r\n        this.props.addSticker(newSticker);\r\n        this.setState({\r\n            title: '',\r\n            text: '',\r\n            color: '#fff',\r\n            showColorPicker: false\r\n        });\r\n    };\r\n    handleChange = e => {\r\n        const target = e.target;\r\n        this.setState({ [target.name]: target.value });\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ showColorPicker: !this.state.showColorPicker });\r\n    };\r\n    handleColorChange = color => {\r\n        const newColor = Object.values(color.hex).join('');\r\n        this.setState({ color: newColor });\r\n    };\r\n    render() {\r\n        const { title, text, color, showColorPicker } = this.state;\r\n        return (\r\n            <li\r\n                style={{ backgroundColor: color }}\r\n                className=\"stickers__item sticker\"\r\n            >\r\n                <div className=\"sticker__header\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Enter title..\"\r\n                        className=\"sticker__title\"\r\n                        value={title}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div className=\"sticker__controls\">\r\n                        <button\r\n                            className=\"sticker__btn icon-color-adjust\"\r\n                            onClick={this.handleClick}\r\n                            title=\"Change sticker color\"\r\n                        >\r\n                            {showColorPicker ? (\r\n                                <GithubPicker\r\n                                    color={color}\r\n                                    onChange={this.handleColorChange}\r\n                                />\r\n                            ) : null}\r\n                        </button>\r\n                        <button\r\n                            title=\"Add sticker\"\r\n                            className=\"sticker__btn sticker__add icon-plus\"\r\n                            onClick={this.addSticker}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"sticker__details\">\r\n                    <textarea\r\n                        name=\"text\"\r\n                        className=\"sticker__text\"\r\n                        type=\"textarea\"\r\n                        placeholder=\"Enter text...\"\r\n                        value={text}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { StickerListItem } from './StickerListItem';\r\nimport StickerListAdd from './StickerListAdd/StickerListAdd';\r\nexport const StickerList = props => {\r\n    const { stickers, editSticker, removeSticker, addSticker } = props;\r\n    return (\r\n        <div className=\"stickers\">\r\n            <ul className=\"stickers__list\">\r\n                <StickerListAdd addSticker={addSticker} />\r\n                {stickers.map(item => (\r\n                    <StickerListItem\r\n                        sticker={item}\r\n                        key={item.id}\r\n                        editSticker={editSticker}\r\n                        removeSticker={removeSticker}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Header } from './components/Layout/Header';\r\nimport { Footer } from './components/Layout/Footer';\r\nimport { StickerList } from './components/StickerList';\r\n\r\nimport * as db from '../src/services/db';\r\n// import getDatafromAPI from '../src/services/api';\r\n\r\nimport './fontello/css/fontello.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        stickers: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState(db.getStateFromDB());\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        db.saveStateToDB(this.state);\r\n    }\r\n\r\n    addSticker = sticker => {\r\n        this.setState({\r\n            stickers: [...this.state.stickers, sticker]\r\n        });\r\n    };\r\n    removeSticker = id => {\r\n        this.setState({\r\n            stickers: [...this.state.stickers.filter(item => item.id !== id)]\r\n        });\r\n    };\r\n\r\n    editSticker = (id, key, value) => {\r\n        this.setState({\r\n            stickers: this.state.stickers.map(sticker => {\r\n                if (sticker.id === id) {\r\n                    sticker[key] = value;\r\n                }\r\n                return sticker;\r\n            })\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <main className=\"wrapper\">\r\n                    <StickerList\r\n                        removeSticker={this.removeSticker}\r\n                        editSticker={this.editSticker}\r\n                        addSticker={this.addSticker}\r\n                        stickers={this.state.stickers}\r\n                    />\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const getStateFromDB = () => {\r\n    const intitalState = {\r\n        stickers: []\r\n    };\r\n    return localStorage.getItem('stickerList')\r\n        ? JSON.parse(localStorage.getItem('stickerList'))\r\n        : intitalState;\r\n};\r\n\r\nconst saveStateToDB = state => {\r\n    localStorage.setItem('stickerList', JSON.stringify(state));\r\n};\r\n\r\nexport { getStateFromDB, saveStateToDB };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}