{"version":3,"sources":["components/ColorPicker/ColorPicker.js","store/reducers/index.js","store/action-types.js","store/initial-state.js","store/index.js","services/db/firebase.js","services/db/index.js","store/actions/user.js","components/StickerList/StickerListItem/StickerListItem.js","store/actions/stickers.js","components/StickerList/StickerList.js","components/LogInForm/LogInForm.js","components/Layout/Header/Header.js","store/actions/theme.js","components/Layout/Footer/Footer.js","App.js","index.js"],"names":["ColorPicker","color","handleColorChange","style","position","top","right","onChange","triangle","colors","rootReducer","state","action","type","payload","stickers","id","key","value","map","sticker","filter","theme","isLightTheme","user","settings","language","isLogged","localization","authError","initialState","dark","background","light","uid","Store","createContext","init","JSON","parse","localStorage","getItem","StoreProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","children","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","signInWithEmail","email","password","firebase","auth","signInWithEmailAndPassword","catch","error","signInWithGoogle","a","async","provider","GoogleAuthProvider","signInWithPopup","message","initializeApp","this","firestore","storage","createUserWithEmailAndPassword","alert","signOut","userID","collection","doc","set","post","merge","console","log","delete","parameter","get","data","forEach","item","push","response","photoURL","getStickers","getSettings","StickerListItem","useContext","isPinned","title","text","showColorPicker","useState","setState","handleChange","e","target","name","handleBlur","handleEdit","editSticker","pinButtonClass","className","backgroundColor","onBlur","placeholder","onClick","hex","deleteSticker","removeSticker","StickerList","pinnedStickers","unPinnedStickers","length","LogInForm","isVisible","handleClose","handleSignInWithEmail","handleSignInWithGoogle","onSubmit","preventDefault","Header","headerStyle","document","body","showLogInForm","toggleLogInForm","themeIconClass","userIconClass","newSticker","uuid","addSticker","updateSettings","toggleTheme","logout","backgroundImage","Footer","footerStyle","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3239001b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GithubPicker } from 'react-color';\r\nconst ColorPicker = ({ color, handleColorChange }) => {\r\n  return (\r\n    <div style={{ position: 'absolute', top: '150%', right: '-5px' }}>\r\n      <GithubPicker\r\n        color={color}\r\n        onChange={handleColorChange}\r\n        triangle=\"top-right\"\r\n        colors={[\r\n          '#FCCB00',\r\n          '#EB9694',\r\n          '#FAD0C3',\r\n          '#FEF3BD',\r\n          '#C1E1C5',\r\n          '#BEDADC',\r\n          '#C4DEF6'\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { ColorPicker };\r\n","import {\r\n  ADD_STICKER,\r\n  EDIT_STICKER,\r\n  REMOVE_STICKER,\r\n  TOGGLE_THEME,\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  SIGN_IN_ERROR\r\n} from '../action-types';\r\n\r\nconst rootReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_STICKER:\r\n      return {\r\n        ...state,\r\n        stickers: [payload, ...state.stickers]\r\n      };\r\n\r\n    case EDIT_STICKER:\r\n      const { id, key, value } = payload;\r\n      return {\r\n        ...state,\r\n        stickers: state.stickers.map(sticker => {\r\n          if (sticker.id === id) {\r\n            sticker[key] = value;\r\n          }\r\n          return sticker;\r\n        })\r\n      };\r\n\r\n    case REMOVE_STICKER:\r\n      return {\r\n        ...state,\r\n        stickers: state.stickers.filter(sticker => sticker.id !== payload)\r\n      };\r\n\r\n    case TOGGLE_THEME:\r\n      return {\r\n        ...state,\r\n        theme: { ...state.theme, isLightTheme: !payload }\r\n      };\r\n\r\n    case SIGN_IN:\r\n      const {\r\n        user,\r\n        stickers,\r\n        settings: { isLightTheme, language }\r\n      } = payload;\r\n      return {\r\n        ...state,\r\n        user: { ...user, isLogged: true },\r\n        stickers,\r\n        theme: { ...state.theme, isLightTheme },\r\n        localization: { ...state.localization, language },\r\n        authError: null\r\n      };\r\n\r\n    case SIGN_IN_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: payload\r\n      };\r\n\r\n    case SIGN_OUT:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { rootReducer };\r\n","export const ADD_STICKER = 'ADD_STICKER';\r\nexport const EDIT_STICKER = 'EDIT_STICKER';\r\nexport const REMOVE_STICKER = 'REMOVE_STICKER';\r\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const SIGN_IN_ERROR = 'SIGN_IN_ERROR';\r\n","const initialState = {\r\n  theme: {\r\n    isLightTheme: false,\r\n    dark: { background: '#052b3c', color: '#fff' },\r\n    light: { background: '#fff', color: '#052b3c' }\r\n  },\r\n  localization: {\r\n    language: 'en'\r\n  },\r\n  stickers: [],\r\n  user: {\r\n    uid: null,\r\n    isLogged: false\r\n  },\r\n  authError: null\r\n};\r\n// document.body.style.backgroundColor = initialState.theme.dark.background;\r\n\r\nexport default initialState;\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { rootReducer } from './reducers';\r\nimport initialState from './initial-state';\r\n\r\nconst Store = createContext();\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem('StickIt')) || initialState;\r\n};\r\n\r\nconst StoreProvider = props => {\r\n  const [state, dispatch] = useReducer(\r\n    rootReducer,\r\n    initialState,\r\n    init\r\n    // TODO save user to LS\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('StickIt', JSON.stringify(state));\r\n  });\r\n\r\n  return (\r\n    <Store.Provider value={{ ...state, dispatch }}>\r\n      {props.children}\r\n    </Store.Provider>\r\n  );\r\n};\r\n\r\nexport { Store, StoreProvider };\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FB_API_KEY,\r\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FB_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FB_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FB_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FB_APP_ID,\r\n  measurementId: process.env.REACT_APP_FB_MEASUREMENT_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(firebaseConfig);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.firestore();\r\n    this.storage = firebase.storage();\r\n  }\r\n  signInWithEmail = (email, password) =>\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch(error => error);\r\n\r\n  signInWithGoogle = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    await firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .catch(error => error.message);\r\n  };\r\n\r\n  async signUp(email, password) {\r\n    return await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch(error => alert(error.message));\r\n  }\r\n\r\n  async logout() {\r\n    return await firebase\r\n      .auth()\r\n      .signOut()\r\n      .catch(error => alert(error.message));\r\n  }\r\n\r\n  async addSticker(userID, sticker) {\r\n    const post = await firebase\r\n      .firestore()\r\n      .collection('data')\r\n      .doc(userID)\r\n      .collection('stickers')\r\n      .doc(sticker.id)\r\n      .set(sticker)\r\n      .catch(error => alert(error.message));\r\n    return post;\r\n  }\r\n\r\n  async editSticker(userID, sticker) {\r\n    const post = await firebase\r\n      .firestore()\r\n      .collection('data')\r\n      .doc(userID)\r\n      .collection('stickers')\r\n      .doc(sticker.id)\r\n      .set(sticker, { merge: true })\r\n      .catch(error => alert(error.message));\r\n    console.log('Sticker Updated');\r\n    return post;\r\n  }\r\n\r\n  async deleteSticker(userID, id) {\r\n    const post = await firebase\r\n      .firestore()\r\n      .collection('data')\r\n      .doc(userID)\r\n      .collection('stickers')\r\n      .doc(id)\r\n      .delete()\r\n      .catch(error => alert(error.message));\r\n    console.log('Sticker Deleted');\r\n\r\n    return post;\r\n  }\r\n\r\n  // async getUserState() {\r\n  //   return new Promise(resolve => {\r\n  //     this.auth.onAuthStateChanged(resolve);\r\n  //   });\r\n  // }\r\n  async updateSettings(userID, parameter) {\r\n    const settings = await firebase\r\n      .firestore()\r\n      .collection('data')\r\n      .doc(userID)\r\n      .collection('settings')\r\n      .doc('common')\r\n      .set(parameter, { merge: true })\r\n      .catch(error => alert(error.message));\r\n    console.log('Settings Updated');\r\n    return settings;\r\n  }\r\n  async getSettings(userID) {\r\n    const settings = await firebase\r\n      .firestore()\r\n      .collection('data')\r\n      .doc(userID)\r\n      .collection('settings')\r\n      .doc('common')\r\n      .get()\r\n      .catch(error => alert(error.message));\r\n    return settings.data();\r\n  }\r\n\r\n  async getStickers(userID) {\r\n    const data = [];\r\n    const posts = await firebase\r\n      .firestore()\r\n      .collection('data')\r\n      .doc(userID)\r\n      .collection('stickers')\r\n      .get()\r\n      .catch(error => alert(error.message));\r\n    posts.forEach(item => data.push(item.data()));\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default new Firebase();\r\n","import firebaseService from './firebase';\r\n\r\nconst db = firebaseService;\r\n\r\nexport default db;\r\n","import { SIGN_IN, SIGN_OUT, SIGN_IN_ERROR } from '../action-types';\r\nimport initialState from '../initial-state';\r\nimport db from '../../services/db';\r\n\r\nexport const signInWithEmail = async (dispatch, email, password) => {\r\n  const response = await db.signInWithEmail(email, password);\r\n  if (response.user) {\r\n    const uid = response.user.uid;\r\n    const photoURL =\r\n      'https://www.globalipattorneys.com/storage/images/noavatar.png';\r\n    const stickers = await db.getStickers(uid);\r\n    const settings = (await db.getSettings(uid)) || {\r\n      isLightTheme: false,\r\n      language: 'en'\r\n    };\r\n    dispatch({\r\n      type: SIGN_IN,\r\n      payload: { user: { uid, email, photoURL }, stickers, settings }\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: SIGN_IN_ERROR,\r\n      payload: response.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const signInWithGoogle = async dispatch => {\r\n  const response = await db.signInWithGoogle();\r\n  const { uid, email, photoURL } = response.user;\r\n  const stickers = await db.getStickers(uid);\r\n  const settings = (await db.getSettings(uid)) || {\r\n    isLightTheme: false,\r\n    language: 'en'\r\n  };\r\n  dispatch({\r\n    type: SIGN_IN,\r\n    payload: { user: { uid, email, photoURL }, stickers, settings }\r\n  });\r\n};\r\n\r\nexport const signOut = async dispatch => {\r\n  await db.logout();\r\n  dispatch({\r\n    type: SIGN_OUT,\r\n    payload: initialState\r\n  });\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { ColorPicker } from '../../ColorPicker';\r\nimport { Store } from '../../../store';\r\nimport { removeSticker, editSticker } from '../../../store/actions';\r\nimport './StickerListItem.scss';\r\n\r\nconst StickerListItem = ({ sticker }) => {\r\n  const { user, dispatch } = useContext(Store);\r\n  const { id, color, isPinned } = sticker;\r\n  const initialState = {\r\n    title: sticker.title,\r\n    text: sticker.text,\r\n    showColorPicker: false\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n  const { title, text, showColorPicker } = state;\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const handleBlur = e => {\r\n    const { name, value } = e.target;\r\n    handleEdit(name, value);\r\n  };\r\n  const handleRemoveClick = () => {\r\n    removeSticker(dispatch, user.uid, id);\r\n  };\r\n  const handleColorClick = () => {\r\n    setState({ ...state, showColorPicker: !showColorPicker });\r\n  };\r\n  const handleColorChange = color => {\r\n    handleEdit('color', color.hex);\r\n  };\r\n  const handlePinClick = () => {\r\n    handleEdit('isPinned', !isPinned);\r\n  };\r\n  const handleEdit = (key, value) => {\r\n    editSticker(dispatch, user.uid, id, key, value);\r\n  };\r\n  const pinButtonClass = isPinned\r\n    ? 'sticker__btn icon-pin'\r\n    : 'sticker__btn icon-pin-outline';\r\n  return (\r\n    <li className=\"stickers__item sticker\">\r\n      <div className=\"sticker__container\" style={{ backgroundColor: color }}>\r\n        <div className=\"sticker__header\">\r\n          <input\r\n            className=\"sticker__title\"\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            placeholder=\"Enter title...\"\r\n          />\r\n          <div className=\"sticker__controls\">\r\n            <button\r\n              className=\"sticker__btn icon-color-adjust\"\r\n              onClick={handleColorClick}\r\n            >\r\n              {showColorPicker ? (\r\n                <ColorPicker\r\n                  color={color}\r\n                  handleColorChange={handleColorChange}\r\n                />\r\n              ) : null}\r\n            </button>\r\n            <button className={pinButtonClass} onClick={handlePinClick} />\r\n            <button\r\n              className=\"sticker__btn icon-trash-empty\"\r\n              onClick={handleRemoveClick}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"sticker__details\">\r\n          <textarea\r\n            className=\"sticker__text\"\r\n            name=\"text\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            type=\"textarea\"\r\n            value={text}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { StickerListItem };\r\n","import { ADD_STICKER, EDIT_STICKER, REMOVE_STICKER } from '../action-types';\r\nimport db from '../../services/db';\r\nimport uuid from 'uuid/v1';\r\n\r\nexport const editSticker = async (dispatch, uid, id, key, value) => {\r\n  if (uid) await db.editSticker(uid, { id, [key]: value });\r\n  dispatch({ type: EDIT_STICKER, payload: { id, key, value } });\r\n};\r\n\r\nexport const addSticker = async (dispatch, uid) => {\r\n  const newSticker = {\r\n    id: uuid(),\r\n    title: '',\r\n    text: '',\r\n    color: '#fef3bd',\r\n    isPinned: false\r\n  };\r\n  if (uid) await db.addSticker(uid, newSticker);\r\n  dispatch({ type: ADD_STICKER, payload: newSticker });\r\n};\r\n\r\nexport const removeSticker = async (dispatch, uid, id) => {\r\n  if (uid) await db.deleteSticker(uid, id);\r\n  dispatch({ type: REMOVE_STICKER, payload: id });\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { StickerListItem } from './StickerListItem';\r\nimport { Store } from '../../store';\r\nimport './StickerList.scss';\r\n\r\nexport const StickerList = () => {\r\n  const { stickers } = useContext(Store);\r\n  const pinnedStickers = stickers.filter(sticker => sticker.isPinned);\r\n  const unPinnedStickers = stickers.filter(\r\n    sticker => sticker.isPinned === false\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {pinnedStickers.length > 0 && (\r\n        <ul className=\"sticker-list sticker-list--pinned\">\r\n          {pinnedStickers.map(item => (\r\n            <StickerListItem sticker={item} key={item.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <ul className=\"sticker-list\">\r\n        {unPinnedStickers.map(item => (\r\n          <StickerListItem sticker={item} key={item.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './LogInForm.scss';\r\n\r\nconst LogInForm = ({\r\n  isVisible,\r\n  handleClose,\r\n  handleSignInWithEmail,\r\n  handleSignInWithGoogle\r\n}) => {\r\n  const initialState = { email: '', password: '' };\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleSignInWithEmail(state.email, state.password);\r\n  };\r\n\r\n  return (\r\n    isVisible && (\r\n      <div className=\"modal__background\">\r\n        <div className=\"modal\">\r\n          <div className=\"modal__header\">\r\n            <h2 className=\"modal__title\">Log In</h2>\r\n            <div className=\"modal__controls\">\r\n              <button className=\"modal__close\" onClick={handleClose}>\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__content\">\r\n            <form action=\"\" className=\"login-form\" onSubmit={handleSubmit}>\r\n              <input\r\n                className=\"login-form__input\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"E-mail\"\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className=\"login-form__input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n              />\r\n              <button className=\"login-form__btn\">Submit</button>\r\n            </form>\r\n            <hr />\r\n            <button onClick={handleSignInWithGoogle}>Google</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport { LogInForm };\r\n","import React, { useContext, useState } from 'react';\r\nimport { LogInForm } from '../../LogInForm';\r\nimport { Store } from '../../../store';\r\nimport {\r\n  addSticker,\r\n  toggleTheme,\r\n  signInWithEmail,\r\n  signOut,\r\n  signInWithGoogle\r\n} from '../../../store/actions';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  const {\r\n    user: { uid, photoURL, isLogged },\r\n    theme: { isLightTheme, light, dark },\r\n    dispatch\r\n  } = useContext(Store);\r\n\r\n  const headerStyle = isLightTheme ? light : dark;\r\n  document.body.style.backgroundColor = headerStyle.background;\r\n  const [state, setState] = useState({\r\n    showLogInForm: false\r\n  });\r\n\r\n  const handleToggleTheme = () => {\r\n    toggleTheme(dispatch, uid, isLightTheme);\r\n  };\r\n\r\n  const toggleLogInForm = () => {\r\n    setState({ showLogInForm: !state.showLogInForm });\r\n  };\r\n\r\n  const handleLogInClick = () => {\r\n    if (isLogged) {\r\n      signOut(dispatch);\r\n    } else {\r\n      toggleLogInForm();\r\n    }\r\n  };\r\n\r\n  const handleSignInWithEmail = async (email, password) => {\r\n    await signInWithEmail(dispatch, email, password);\r\n    toggleLogInForm();\r\n  };\r\n\r\n  const handleSignInWithGoogle = async () => {\r\n    await signInWithGoogle(dispatch);\r\n    toggleLogInForm();\r\n  };\r\n\r\n  const AddSticker = () => {\r\n    addSticker(dispatch, uid);\r\n  };\r\n\r\n  const themeIconClass = isLightTheme\r\n    ? 'header__menu__btn icon-moon'\r\n    : 'header__menu__btn icon-sun';\r\n\r\n  const userIconClass = photoURL\r\n    ? 'header__menu__btn header__menu__btn--login'\r\n    : 'header__menu__btn icon-user';\r\n\r\n  return (\r\n    <>\r\n      <header style={headerStyle}>\r\n        <div className=\"wrapper header\">\r\n          <div className=\"header__logo\">StickIt</div>\r\n          <div className=\"header__menu\">\r\n            <button\r\n              className=\"header__menu__btn icon-plus\"\r\n              onClick={AddSticker}\r\n              title=\"Add New Sticker\"\r\n            />\r\n            <button\r\n              className={themeIconClass}\r\n              onClick={handleToggleTheme}\r\n              title={isLightTheme ? 'Dark' : 'Light'}\r\n            />\r\n            <button\r\n              className={userIconClass}\r\n              // onClick={handleSignIn}\r\n              onClick={handleLogInClick}\r\n              style={{\r\n                backgroundImage: `url(${photoURL})`\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <LogInForm\r\n        isVisible={state.showLogInForm}\r\n        handleSignInWithEmail={handleSignInWithEmail}\r\n        handleSignInWithGoogle={handleSignInWithGoogle}\r\n        handleClose={toggleLogInForm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import { TOGGLE_THEME } from '../action-types';\r\nimport db from '../../services/db';\r\n\r\nexport const toggleTheme = async (dispatch, uid, isLightTheme) => {\r\n  if (uid) await db.updateSettings(uid, { isLightTheme: !isLightTheme });\r\n  dispatch({ type: TOGGLE_THEME, payload: isLightTheme });\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Store } from '../../../store';\r\n\r\nconst Footer = () => {\r\n  const { theme } = useContext(Store);\r\n  const { isLightTheme, light, dark } = theme;\r\n  const footerStyle = isLightTheme ? light : dark;\r\n  return (\r\n    <footer style={footerStyle}>\r\n      <div className=\"wrapper\">© Serhii Tyshchenko, 2020</div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport { Footer };\r\n","import React from 'react';\r\n\r\nimport { Header, Footer, StickerList } from './components';\r\nimport { StoreProvider } from './store';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <StoreProvider>\r\n      <Header />\r\n      <main className=\"wrapper\">\r\n        <StickerList />\r\n      </main>\r\n      <Footer />\r\n    </StoreProvider>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}